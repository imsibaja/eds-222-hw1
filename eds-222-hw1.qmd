---
title: "EDS 222: Homework 1"
date: "10/14/24"
author: "Ian Morris-Sibaja"
---

## Background

*(The case study in this exercise is based on reality, but does not include actual observational data.)*

In this exercise we will look at a case study concerning air quality in South Asia. The World Health Organization estimates that air pollution kills an estimated seven million people per year, due to its effects on the cardiovascular and respiratory systems. Out of the 40 most polluted cities in the world, South Asia is home to 37, and Pakistan was ranked to contain the second most air pollution in the world in 2020 (IQAIR, 2020). In 2019, Lahore, Pakistan was the 12th most polluted city in the world, exposing a population of 11.1 million people to increased mortality and morbidity risks.

In this exercise, you are given two datasets from Lahore, Pakistan and are asked to compare the two different data collection strategies from this city. These data are:

-   Crowd-sourced data from air quality monitors located in people's homes. These data are voluntarily collected by individual households who choose to install a monitor in their home and upload their data for public access.

-   Official government data from monitors installed by government officials at selected locations across Lahore. There have been reports that government officials strategically locate monitors in locations with cleaner air in order to mitigate domestic and international pressure to clean up the air.

::: callout-note
All data for EDS 222 will be stored on the Taylor server, in the shared `/courses/eds-222/data/` directory. Please see material from EDS 214 on how to access and retrieve data from Taylor. These data are small; all compute can be handled locally. Thanks to Bren PhD student Fatiq Nadeem for assembling these data!
:::

In answering the following questions, please consider the lecture content from class on sampling strategies, as well as the material in Chapter 2 of [*Introduction to Modern Statistics*](https://openintro-ims.netlify.app/data-design). Include in your submission your version of this file "`eds-222-hw1.qmd`" and the rendered HTML output, each containing complete answers to all questions *as well as the associated code*. Questions with answers unsupported by the code will be marked incomplete. Showing your work this way will help you develop the habit of creating reproducible code.

## Assessment

```{r}
library(tidyverse)
library(dplyr)
```

### Question 1

Load the data from each source and label it as `crowdsourced` and `govt` accordingly. For example:

``` r
crowdsourced <- readRDS(file.path("data", "airpol-PK-crowdsourced.RDS"))
govt <- readRDS(file.path("data", "airpol-PK-govt.RDS"))
```

```{r}
crowdsourced <- readRDS(file.path("data", "airpol-PK-crowdsourced.RDS"))
govt <- readRDS(file.path("data", "airpol-PK-govt.RDS"))
```

::: callout-warning
**There's an implicit assumption about file organization in the code above. What is it? How can you make the code work?**

The assumption is that there is a folder named "data" that contains the two .RDS files in your working directory. You can ensure this by making sure all paths to the data matches your code.
:::

1.  These dataframes have one row per pollution observation. How many pollution records are in each dataset?

```{r}
nrow(crowdsourced)
nrow(govt)
```

There are 5488 pollution records in the crowdsourced dataframe. There are 1960 pollution records in the govt dataframe.

2.  Each monitor is located at a unique latitude and longitude location. How many unique monitors are in each dataset?

::: callout-tip
`group_by(longitude,latitude)` and `cur_group_id()` in `dplyr` will help in creating a unique identifier for each (longitude, latitude) pair.
:::

```{r}
crowdsourced_unique_df <- crowdsourced |> 
  group_by(longitude, latitude) |> 
  mutate(id = cur_group_id())

length(unique(crowdsourced_unique_df$"id"))

govt_unique_df <- govt |> 
  group_by(longitude, latitude) |> 
  mutate(id = cur_group_id())

length(unique(govt_unique_df$"id"))
```

There are 14 unique monitors in the crowdsourced dataframe. There are 5 unique monitors in the govt dataframe.

### Question 2

The goal of pollution monitoring in Lahore is to measure the average pollution conditions across the city.

1.  What is the *population* in this setting? Please be precise.

The "population" is the air quality of Lahore, Pakistan

2.  What are the *samples* in this setting? Please be precise.

The "samples" in this setting is the data taken by each unique monitor.

3.  These samples were not randomly collected from across locations in Lahore. Given the sampling approaches described above, discuss possible biases that may enter when we use these samples to construct estimates of population parameters.

Since there are not random samples, they may be taken by monitors with the means to take the samples in the first place. Those with means tend to live in less environmentally places then those without the means to do so. In this case, there may be bias introduced in this sample.

### Question 3

1.  For both the government data and the crowd-sourced data, report the sample mean, sample minimum, and sample maximum value of PM 2.5 (measured in $\mu g/m^3$).

```{r}
mean(crowdsourced$"PM")
min(crowdsourced$"PM")
max(crowdsourced$"PM")

mean(govt$"PM")
min(govt$"PM")
max(govt$"PM")
```

The crowdsourced sample mean, sample minimum, and sample maximum value of PM 2.5 (measured in $\mu g/m^3$) is 70.2008, 20, 120.

The govt sample mean, sample minimum, and sample maximum value of PM 2.5 (measured in $\mu g/m^3$) is 39.64694, 15, 65.

2.  Discuss any key differences that you see between these two samples.

The two samples are extremely different. Not only is the crowdsourced sample mean almost half as much as the govt sample, the max value of the crowdsourced sample is nearly half as much as the govt sample. However, the minimum values are relatively similar.

3.  Are the differences in mean pollution as expected, given what we know about the sampling strategies?

This was the opposite of my intuition. I would expect the crowdsourced areas to have better air quality, as I initially thought they would have more access to healhtier areas in the city. I can justify the actual outcome do to the law of large numbers. As there are much more observations in the crowdsourced data, we are more likely to see a higher more consistent mean, especially as we know that Lahore has one of the worst air qualities in the world.

### Question 4

Use the location of the air pollution stations for both of the sampling strategies to generate a map showing locations of each observation. Color the two samples with different colors to highlight how each sample obtains measurements from different parts of the city.

::: callout-tip
`longitude` indicates location in the *x*-direction, while `latitude` indicates location in the *y*-direction. With `ggplot2` this should be nothing fancy. We'll do more spatial data in `R` later in the course.
:::

```{r}
ggplot(data = govt) +
  geom_point(aes(x = longitude, y = latitude), color = "blue") +
  geom_point(data = crowdsourced, aes(x = longitude, y = latitude), color = "red")
```


### Question 5

The local newspaper in Pakistan, *Dawn*, claims that the government is misreporting the air pollution levels in Lahore. Do the locations of monitors in question 4, relative to crowd-sourced monitors, suggest anything about a possible political bias?

Yes there is political bias. All of the government samples are located in a central area, misrepresenting the population.


### Question 6

Given the recent corruption in air quality reporting, the Prime Minister of Pakistan has hired an independent body of environmental data scientists to create an unbiased estimate of the mean PM 2.5 across Lahore using some combination of both government stations and crowd sourced observations.

NASA's satellite data indicates that the average PM across Lahore is 89.2 $\mu g/m^3$. Since this is the most objective estimate of population-level PM 2.5 available, your goal is to match this mean as closely as possible by creating a new ground-level monitoring sample that draws on both the government and crowd-sourced samples.

#### Question 6.1

First, generate a *random sample* of size $n=1000$ air pollution records by (i) pooling observations across the government and the crowd-sourced data; and (ii) drawing observations at random from this pooled sample.

::: callout-tip
`bind_rows()` may be helpful.
:::

```{r}
full_df <- bind_rows(govt, crowdsourced)
full_df
```


Second, create a *stratified random sample*. Do so by (i) stratifying your pooled data-set into strata of 0.01 degrees of latitude, and (ii) randomly sampling 200 air pollution observations from each stratum.

```{r}
full_df <- full_df |> 
  mutate(lat_round = round(latitude, digits = 2))
full_df
```
```{r}
# group by stratifies 
# slice sample creates a random selection
strat_pool_sample <-  full_df |> 
  group_by(lat_round) |> 
  slice_sample(n=200)

# check visually
ggplot(strat_pool_sample) +
  geom_bar(aes(x=lat_round))
```


#### Question 6.2

Compare estimated means of PM 2.5 for each sampling strategy to the NASA estimate of 89.2 $\mu g/m^3$. Which sample seems to match the satellite data best? What would you recommend the Prime Minister do? Does your proposed sampling strategy rely more on government or on crowd-sourced data? Why might that be the case?

```{r}
summary(strat_pool_sample)
```


The crowdsourcing summary statistics are closer to the NASA estimate of 89.2 and the full random sample mean of 66.57. I would recommend that the prime minister use crowdsourcing data. This is not simply because the means are closer (crowdsourcing mean = 70.2008), but also the crowdsourcing has less bias in their data. There is more observations and more land being covered in addition to the means being much more similar.If it is possible, I would use both the government and the crowd-sourced data. However, if given the choice between one or the other, I would rely on the crowd-sourced data.
